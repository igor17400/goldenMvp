{"version":3,"sources":["components/Navbar/scrollSpy.js","components/Navbar/Navbar_Page.js","pages/LandingPage/section.js","components/AboutUs/AboutUs.js","components/common/section-title.js","components/Process/ProcessBox.js","components/Process/Process.js","components/GetStart/GetStart.js","components/Social/Social.js","components/Footer/footer-links.js","components/Footer/footer.js","routes.js","pages/LandingPage/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["ScrollspyNav","props","scrollSection","scrollSectionOffsetTop","scrollTargetIds","forEach","sectionID","index","document","getElementById","offsetTop","headerBackground","querySelector","scrollHeight","window","pageYOffset","getNavLinkElement","classList","add","activeNavClass","parentNode","clearOtherNavLinkActiveStyle","remove","innerHeight","body","length","scrollDuration","Number","router","homeDefaultLink","hashIdentifier","bind","current_time","start","change","duration","to","currentTime","animateScroll","val","easeInOutQuad","scrollTo","setTimeout","this","navHref","includes","replace","addEventListener","event","preventDefault","location","hash","querySelectorAll","navLink","getNavToSectionID","getAttribute","scrollTargetPosition","removeEventListener","excludeSectionID","data-nav","className","children","Component","NavbarPage","toggle","setState","isOpenMenu","state","targetId","navItems","map","item","idnm","Fragment","header","Navbar","expand","fixed","navClass","Container","NavbarBrand","href","src","width","height","NavbarToggler","onClick","Collapse","id","isOpen","navbar","Nav","key","NavItem","navheading","NavLink","stickyOffset","content","text","animation","TextRotator","time","startDelay","Section","callModal","child","openModal","style","backgroundImage","backgroundSize","backgroundPosition","Row","Col","lg","size","offset","AboutUs","title","SectionTitle","desc","ProcessBox","len","processes","process","icon","Process","GetStart","Button","open","color","type","alt","Social","class","FooterLinks","Footer","routes","path","component","App","route","idx","Boolean","hostname","match","app","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ffae35da.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ScrollspyNav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.props = props;\r\n        this.scrollTargetIds = this.props.scrollTargetIds;\r\n        this.activeNavClass = this.props.activeNavClass;\r\n        this.scrollDuration = Number(this.props.scrollDuration) || 1000;\r\n        this.headerBackground = this.props.headerBackground === \"true\" ? true : false;\r\n\r\n        if (this.props.router && this.props.router === \"HashRouter\") {\r\n            this.homeDefaultLink = \"#/\";\r\n            this.hashIdentifier = \"#/#\";\r\n        } else {\r\n            this.homeDefaultLink = \"/\";\r\n            this.hashIdentifier = \"#\";\r\n        }\r\n        this.scrollSection.bind(this);\r\n    }\r\n\r\n    easeInOutQuad(current_time, start, change, duration) {\r\n        current_time /= duration / 2;\r\n        if (current_time < 1) return change / 2 * current_time * current_time + start;\r\n        current_time--;\r\n        return -change / 2 * (current_time * (current_time - 2) - 1) + start;\r\n    };\r\n\r\n    scrollTo(start, to, duration) {\r\n        let change = to - start,\r\n            currentTime = 0,\r\n            increment = 10;\r\n\r\n        let animateScroll = () => {\r\n            currentTime += increment;\r\n            let val = this.easeInOutQuad(currentTime, start, change, duration);\r\n            window.scrollTo(0, val);\r\n            if (currentTime < duration) {\r\n                setTimeout(animateScroll, increment);\r\n            }\r\n        };\r\n\r\n        animateScroll();\r\n    }\r\n\r\n    getNavLinkElement(sectionID) {\r\n        return document.querySelector(`a[href='${this.hashIdentifier}${sectionID}']`);\r\n    }\r\n\r\n    getNavToSectionID(navHref) {\r\n        return navHref.includes(this.hashIdentifier) ? navHref.replace(this.hashIdentifier, \"\") : \"\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (document.querySelector(`a[href='${this.homeDefaultLink}']`)) {\r\n            document.querySelector(`a[href='${this.homeDefaultLink}']`).addEventListener(\"click\", (event) => {\r\n                event.preventDefault();\r\n                this.scrollTo(window.pageYOffset, 0, this.scrollDuration);\r\n                window.location.hash = \"\";\r\n            });\r\n        }\r\n\r\n        document.querySelector(\"div[data-nav='list']\").querySelectorAll(\"a\").forEach((navLink) => {\r\n            navLink.addEventListener(\"click\", (event) => {\r\n                event.preventDefault();\r\n                let sectionID = this.getNavToSectionID(navLink.getAttribute(\"href\"));\r\n\r\n                if (sectionID) {\r\n                    let scrollTargetPosition = document.getElementById(sectionID).offsetTop - (this.headerBackground ? document.querySelector(\"div[data-nav='list']\").scrollHeight : 0);\r\n                    this.scrollTo(window.pageYOffset, scrollTargetPosition, this.scrollDuration);\r\n                } else {\r\n                    this.scrollTo(window.pageYOffset, 0, this.scrollDuration);\r\n                }\r\n            });\r\n        })\r\n\r\n        window.addEventListener(\"scroll\", this.scrollSection, true );\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"scroll\", this.scrollSection, true );\r\n    }\r\n    \r\n    scrollSection = () => {\r\n            let scrollSectionOffsetTop;\r\n            this.scrollTargetIds.forEach((sectionID, index) => {\r\n                scrollSectionOffsetTop = document.getElementById(sectionID).offsetTop - (this.headerBackground ? document.querySelector(\"div[data-nav='list']\").scrollHeight : 0);\r\n\r\n                if (window.pageYOffset >= scrollSectionOffsetTop && window.pageYOffset < scrollSectionOffsetTop + document.getElementById(sectionID).scrollHeight) {\r\n                    this.getNavLinkElement(sectionID).classList.add(this.activeNavClass);\r\n                    this.getNavLinkElement(sectionID).parentNode.classList.add(this.activeNavClass);\r\n                    this.clearOtherNavLinkActiveStyle(sectionID)\r\n                } else {\r\n                    this.getNavLinkElement(sectionID).classList.remove(this.activeNavClass);\r\n                    this.getNavLinkElement(sectionID).parentNode.classList.remove(this.activeNavClass);\r\n                }\r\n\r\n                if (window.innerHeight + window.pageYOffset >= document.body.scrollHeight && index === this.scrollTargetIds.length - 1) {\r\n                    this.getNavLinkElement(sectionID).classList.add(this.activeNavClass);\r\n                    this.getNavLinkElement(sectionID).parentNode.classList.add(this.activeNavClass);\r\n                    this.clearOtherNavLinkActiveStyle(sectionID);\r\n                }\r\n            });\r\n    }\r\n    clearOtherNavLinkActiveStyle(excludeSectionID) {\r\n        this.scrollTargetIds.forEach((sectionID, index) => {\r\n            if (sectionID !== excludeSectionID) {\r\n                this.getNavLinkElement(sectionID).classList.remove(this.activeNavClass);\r\n                this.getNavLinkElement(sectionID).parentNode.classList.remove(this.activeNavClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div data-nav=\"list\" className={this.props.className}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScrollspyNav;","import React, { Component } from \"react\";\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n    NavbarBrand,\r\n    NavbarToggler,\r\n    NavItem,\r\n    NavLink,\r\n    Container,\r\n    Collapse,\r\n} from \"reactstrap\";\r\n\r\nimport ScrollspyNav from \"./scrollSpy\";\r\n\r\n//stickey header\r\nimport \"react-sticky-header/styles.css\";\r\nimport StickyHeader from \"react-sticky-header\";\r\n\r\nclass NavbarPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenMenu: false,\r\n        };\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({ isOpenMenu: !this.state.isOpenMenu });\r\n    };\r\n\r\n    render() {\r\n        //Store all Navigationbar Id into TargetID variable(Used for Scrollspy)\r\n        let targetId = this.props.navItems.map((item) => {\r\n            return item.idnm;\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                <StickyHeader\r\n                    header={\r\n                        <Navbar\r\n                            expand=\"lg\"\r\n                            fixed=\"top\"\r\n                            className={\r\n                                \"navbar-custom sticky sticky-dark \" +\r\n                                this.props.navClass\r\n                            }\r\n                        >\r\n                            <Container>\r\n                                <NavbarBrand\r\n                                    className=\"logo text-uppercase\"\r\n                                    href=\"/\"\r\n                                >\r\n                                    <img\r\n                                        src=\"assets/images/golden_logo_rounded.png\"\r\n                                        width=\"30\"\r\n                                        height=\"30\"\r\n                                        className=\"d-inline-block align-top\"\r\n                                    />{\" \"}\r\n                                    Golden\r\n                                </NavbarBrand>\r\n                                <NavbarToggler onClick={this.toggle}>\r\n                                    <i className=\"mdi mdi-menu\"></i>\r\n                                </NavbarToggler>\r\n\r\n                                <Collapse\r\n                                    id=\"navbarCollapse\"\r\n                                    isOpen={this.state.isOpenMenu}\r\n                                    navbar\r\n                                >\r\n                                    <ScrollspyNav\r\n                                        scrollTargetIds={targetId}\r\n                                        scrollDuration=\"800\"\r\n                                        headerBackground=\"true\"\r\n                                        activeNavClass=\"active\"\r\n                                        className=\"navbar-collapse\"\r\n                                    >\r\n                                        <Nav\r\n                                            navbar\r\n                                            className=\"navbar-center\"\r\n                                            id=\"mySidenav\"\r\n                                        >\r\n                                            {this.props.navItems.map(\r\n                                                (item, key) => (\r\n                                                    <NavItem\r\n                                                        key={key}\r\n                                                        className={\r\n                                                            item.navheading ===\r\n                                                            \"Home\"\r\n                                                                ? \"active\"\r\n                                                                : \"\"\r\n                                                        }\r\n                                                    >\r\n                                                        <NavLink\r\n                                                            href={\r\n                                                                \"#\" + item.idnm\r\n                                                            }\r\n                                                        >\r\n                                                            {\" \"}\r\n                                                            {item.navheading}\r\n                                                        </NavLink>\r\n                                                    </NavItem>\r\n                                                )\r\n                                            )}\r\n                                        </Nav>\r\n                                    </ScrollspyNav>\r\n                                    {/* <div className=\"nav-button ms-auto\">\r\n                                        <Nav navbar className=\"navbar-end\">\r\n                                            <li>\r\n                                                <Link to=\"/login\">\r\n                                                    <Button\r\n                                                        color=\"trasparent\"\r\n                                                        className=\"text-white\"\r\n                                                    >\r\n                                                        Entrar\r\n                                                    </Button>\r\n                                                </Link>\r\n                                            </li>\r\n                                            <li>\r\n                                                <Link to=\"/registrar\">\r\n                                                    <Button\r\n                                                        color=\"none\"\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-primary navbar-btn btn-rounded waves-effect waves-light\"\r\n                                                    >\r\n                                                        Registrar\r\n                                                    </Button>\r\n                                                </Link>\r\n                                            </li>\r\n                                        </Nav>\r\n                                    </div> */}\r\n                                </Collapse>\r\n                            </Container>\r\n                        </Navbar>\r\n                    }\r\n                    stickyOffset={-100}\r\n                ></StickyHeader>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarPage;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\n//text rotator\r\nimport ReactTextRotator from \"react-text-rotator\";\r\n\r\nconst content = [\r\n    {\r\n        text: \"Nós somos a Golden.\",\r\n        className: \"classA\",\r\n        animation: \"fade\",\r\n    },\r\n    {\r\n        text: \"Através de uma rede de influenciadores\",\r\n        className: \"classB\",\r\n        animation: \"fade\",\r\n    },\r\n    {\r\n        text: \"Impactamos pessoas e elevamos o engajamento de estabelecimentos.\",\r\n        className: \"classC\",\r\n        animation: \"fade\",\r\n    },\r\n    {\r\n        text: \"Vamos nessa?\",\r\n        className: \"classD\",\r\n        animation: \"fade\",\r\n    },\r\n];\r\n\r\nconst TextRotator = () => (\r\n    <ReactTextRotator content={content} time={3000} startDelay={1000} />\r\n);\r\n\r\nclass Section extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isOpen: false,\r\n        };\r\n        this.callModal.bind(this);\r\n    }\r\n\r\n    callModal = () => {\r\n        this.child.openModal();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <section\r\n                    className=\"section section-lg vh-100\"\r\n                    id=\"home\"\r\n                    style={{\r\n                        backgroundImage: `url(assets/images/golden_baby.jpg)`,\r\n                        backgroundSize: \"cover\",\r\n                        backgroundPosition: \"center top\",\r\n                    }}\r\n                >\r\n                    <div className=\"bg-overlay\"></div>\r\n                    <div className=\"display-table\">\r\n                        <div className=\"display-table-cell\">\r\n                            <Container>\r\n                                <Row>\r\n                                    <Col\r\n                                        lg={{ size: 8, offset: 2 }}\r\n                                        className=\"text-white text-center\"\r\n                                    >\r\n                                        <h1 className=\"home-title text-rotate\">\r\n                                            <TextRotator />\r\n                                        </h1>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nclass AboutUs extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"section bg-light\" id=\"aboutUs\">\r\n                    <Container>\r\n                        <Row className=\"vertical-content\">\r\n                            <Col lg={5}>\r\n                                <div className=\"features-box\">\r\n                                    <h3>\r\n                                        Nós somos, nada mais e nada menos, que\r\n                                        uma empresa de conexões.\r\n                                    </h3>\r\n                                    <i className=\"logo-golden\"></i>\r\n                                    <p className=\"text-muted web-desc\">\r\n                                        Em outras palavras. Conseguimos\r\n                                        interligar pessoas por meio de suas vivências.\r\n                                    </p>\r\n                                    <ul className=\"text-muted list-unstyled mt-4 features-item-list\">\r\n                                        <li className=\"\">\r\n                                            Todo mundo tem aquele estabelecimento que gosta\r\n                                            e frequenta. \r\n                                        </li>\r\n                                        <li className=\"\">\r\n                                            Porque não compartilhar essa dica?\r\n                                        </li>\r\n                                        <li className=\"\">\r\n                                            Porque não ganhar com isso?\r\n                                        </li>\r\n                                        <li className=\"\">\r\n                                            Indicações se convertem em conexões. \r\n                                        </li>\r\n                                        <li className=\"\">\r\n                                            Conexões se convertem em experiências.\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </Col>\r\n                            <Col lg={5}>\r\n                                <div className=\"mt-auto react-player\">\r\n                                    <iframe\r\n                                        className=\"frame-border player-wrapper\"\r\n                                        title=\"dorsin\"\r\n                                        src=\"https://www.youtube.com/embed/E-UrkEjU7PI?rel=0\"\r\n                                    ></iframe>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutUs;\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\nclass SectionTitle extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Row>\r\n          <Col lg={{ size: 8, offset: 2 }}>\r\n            <h1 className=\"section-title text-center\">{this.props.title}</h1>\r\n            <div className=\"section-title-border mt-3\"></div>\r\n            <p className=\"section-subtitle text-muted text-center pt-4 font-secondary\">\r\n              {this.props.desc}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SectionTitle;\r\n","import React, { Component } from \"react\";\r\nimport { Col } from \"reactstrap\";\r\n\r\nclass ProcessBox extends Component {\r\n  render() {\r\n    const len = this.props.processes.length;\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.processes.map((process, key) => (\r\n          <Col key={key} lg={4} className={key + 1 === len ? \"\" : \"plan-line\"}>\r\n            <div className=\"text-center process-box\">\r\n              <i className={process.icon + \" text-primary\"}></i>\r\n              <h4 className=\"pt-3\">{process.title}</h4>\r\n              <p className=\"text-muted\">{process.desc}</p>\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProcessBox;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\n//Import Section Title\r\nimport SectionTitle from \"../common/section-title\";\r\nimport ProcessBox from \"./ProcessBox\";\r\n\r\nclass Process extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            processes: [\r\n                {\r\n                    icon: \"pe-7s-timer\",\r\n                    title: \"Se cadastre em nosso formulário e aguarde convite de acesso\",\r\n                    desc: \"Basta ficar atento ao e-mail e ao telefone.\",\r\n                },\r\n                {\r\n                    icon: \"pe-7s-phone\",\r\n                    title: \"Indique estabelecimentos que gosta e consome\",\r\n                    desc: \"Basta compartilhas o seu MyGolden com seus amigos.\",\r\n                },\r\n                {\r\n                    icon: \"pe-7s-cash\",\r\n                    title: \"Ganhe dinheiro em troca da sua indicação\",\r\n                    desc:\r\n                        \"Toda indicação que converter uma compra, você ganha uma comissão.\",\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"section bg-light\">\r\n                    <Container>\r\n                        {/* section title */}\r\n                        <SectionTitle\r\n                            title=\"Como Funciona?\"\r\n                            desc=\"Cadastre. Indique. Ganhe.\"\r\n                        />\r\n\r\n                        <Row>\r\n                            <Col\r\n                                lg={6}\r\n                                className=\"text-center process-left-icon-1\"\r\n                            >\r\n                                <i className=\"pe-7s-angle-right\"></i>\r\n                            </Col>\r\n                            <Col\r\n                                lg={6}\r\n                                className=\"text-center process-left-icon-2\"\r\n                            >\r\n                                <i className=\"pe-7s-angle-right\"></i>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-5\">\r\n                            <ProcessBox processes={this.state.processes} />\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Process;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Button } from \"reactstrap\";\r\nimport FormRequest from \"../EmailForm/FormRequest\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst post = async (data) => {\r\n    const { url } = data;\r\n\r\n    delete data.url;\r\n\r\n    const params = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n        },\r\n    };\r\n\r\n    const response = await fetch(url, params);\r\n\r\n    if (response.status < 200 && response.status >= 300) {\r\n        const res = await response.json();\r\n\r\n        throw new Error(res);\r\n    }\r\n\r\n    return response.json();\r\n};\r\n\r\nclass GetStart extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"section section-lg bg-get-start\" id=\"join\">\r\n                <div className=\"bg-overlay\"></div>\r\n                <Container>\r\n                    <Row>\r\n                        <Col\r\n                            lg={{ size: 8, offset: 2 }}\r\n                            className=\"text-center\"\r\n                        >\r\n                            <h1 className=\"get-started-title text-white\">\r\n                                Vamos entrar nessa rede\r\n                            </h1>\r\n                            <div className=\"section-title-border mt-4 bg-white\"></div>\r\n                            <p className=\"section-subtitle font-secondary text-white text-center pt-4\">\r\n                                Você não imagina o mundo que está prestes a\r\n                                descobrir.{\" \"}\r\n                            </p>\r\n                            <Button\r\n                                onClick={() =>\r\n                                    window.open(\r\n                                        \"https://docs.google.com/forms/d/e/1FAIpQLSdQ5n3yqE6yH3TjAN--RRoyvfyenxWQ5CTUkPFdFi5bTITb0Q/viewform?usp=sf_link\",\r\n                                        \"_blank\"\r\n                                    )\r\n                                }\r\n                                color=\"dark\"\r\n                                type=\"submit\"\r\n                                className=\"btn-secondary\"\r\n                            >\r\n                                Participar\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <div className=\"bg-pattern-effect\">\r\n                    <img\r\n                        src=\"assets/images/bg-pattern-light.png\"\r\n                        alt=\"pattern\"\r\n                    />\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GetStart;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Social extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"contact-social footer-alt\">\r\n                    <Container>\r\n                        <Row className=\"align-items-center\">\r\n                            <Col lg={4}>\r\n                                <ul className=\"list-inline social mt-4\">\r\n                                    <li className=\"list-inline-item\">\r\n                                        <Link to=\"#\" className=\"social-icon\">\r\n                                            <i className=\"mdi mdi-instagram\"></i>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"list-inline-item\">\r\n                                        <Link to=\"#\" className=\"social-icon\">\r\n                                            <i class=\"fab fa-tiktok\"></i>\r\n                                        </Link>\r\n                                    </li>\r\n                                </ul>\r\n                            </Col>\r\n                            <Col lg={3} className=\"mt-4 text-white\">\r\n                                <p className=\"contact-title\">\r\n                                    <i className=\"pe-7s-call\"></i> &nbsp;+55\r\n                                    (61)99699-5651\r\n                                </p>\r\n                            </Col>\r\n                            <Col lg={5} className=\"mt-4 text-white\">\r\n                                <p className=\"contact-title\">\r\n                                    <i className=\"pe-7s-mail-open\"></i>&nbsp;\r\n                                    app.golden.publicidade@gmail.com\r\n                                </p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Social;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nclass   FooterLinks extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"footer-alt\">\r\n          <Container>\r\n            <Row>\r\n              <Col lg={12}>\r\n                <div className=\"float-start pull-none\">\r\n                  <p className=\"copy-rights text-muted\">\r\n                    2021 - 2022 © GOLDEN\r\n                  </p>\r\n                </div>\r\n                <div className=\"clearfix\"></div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FooterLinks;\r\n","import React, { Component } from \"react\";\r\n\r\n//Import Footer link\r\nimport FooterLinks from \"./footer-links\";\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {/* Render footer links */}\r\n                <FooterLinks />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import LandingPage from \"./pages/LandingPage/LandingPage\";\r\n\r\n//Auth Pages\r\n// import Signup from \"./pages/Auth/Signup\";\r\n// import Login from \"./pages/Auth/Login\";\r\n// import PasswordForget from \"./pages/Auth/PasswordForget\";\r\n\r\nconst routes = [\r\n  { path: \"/\", component: LandingPage },\r\n];\r\n\r\nexport default routes;\r\n","import React, { Component } from 'react';\r\n\r\nimport NavbarPage from \"../../components/Navbar/Navbar_Page\";\r\nimport Section from './section';\r\nimport AboutUs from \"../../components/AboutUs/AboutUs\";\r\nimport Process from \"../../components/Process/Process\";\r\nimport GetStart from \"../../components/GetStart/GetStart\"\r\nimport Social from \"../../components/Social/Social\";\r\nimport Footer from \"../../components/Footer/footer\";\r\n\r\nclass LandingPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navItems : [\r\n                { id: 1 , idnm : \"home\", navheading: \"Início\" },\r\n                { id: 2 , idnm : \"aboutUs\", navheading: \"Sobre Nós\" },\r\n                { id: 3 , idnm : \"join\", navheading: \"Faça Parte\" },\r\n            ],\r\n            navClass : \"\"\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n                {/* Importing Navbar */}\r\n                <NavbarPage navItems={this.state.navItems} navClass={this.state.navClass} />\r\n\r\n                {/* section */}\r\n                <Section/>\r\n\r\n                {/* about us */}\r\n                <AboutUs/>\r\n\r\n                {/* get started */}\r\n                <GetStart/>\r\n\r\n                {/* process */}\r\n                <Process/>\r\n\r\n                {/* social */}\r\n                <Social />\r\n\r\n                {/* footer */}\r\n                <Footer/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React from \"react\";\nimport routes from \"./routes\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    {routes.map((route, idx) => (\n                        <Route\n                            path={route.path}\n                            component={route.component}\n                            key={idx}\n                        />\n                    ))}\n                </Switch>\n            </Router>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}